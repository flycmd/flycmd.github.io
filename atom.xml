<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>flycmd</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://www.flycmd.com/"/>
  <updated>2020-07-03T12:06:59.045Z</updated>
  <id>http://www.flycmd.com/</id>
  
  <author>
    <name>flycmd</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Laradock使用SSH KEY</title>
    <link href="http://www.flycmd.com/2020/07/03/Laradock%E4%BD%BF%E7%94%A8SSH-KEY/"/>
    <id>http://www.flycmd.com/2020/07/03/Laradock使用SSH-KEY/</id>
    <published>2020-07-03T12:04:04.000Z</published>
    <updated>2020-07-03T12:06:59.045Z</updated>
    
    <content type="html"><![CDATA[<p>.env 配置 <code>WORKSPACE_INSTALL_WORKSPACE_SSH</code> 为 <code>true</code>,然后重新编译,密钥使用的是<code>workspace</code>下的<code>insecure_id_rsa</code>和<code>insecure_id_rsa.pub</code></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;.env 配置 &lt;code&gt;WORKSPACE_INSTALL_WORKSPACE_SSH&lt;/code&gt; 为 &lt;code&gt;true&lt;/code&gt;,然后重新编译,密钥使用的是&lt;code&gt;workspace&lt;/code&gt;下的&lt;code&gt;insecure_id_rsa&lt;/code
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Nginx与安全有关的几个配置</title>
    <link href="http://www.flycmd.com/2019/06/23/Nginx%E4%B8%8E%E5%AE%89%E5%85%A8%E6%9C%89%E5%85%B3%E7%9A%84%E5%87%A0%E4%B8%AA%E9%85%8D%E7%BD%AE/"/>
    <id>http://www.flycmd.com/2019/06/23/Nginx与安全有关的几个配置/</id>
    <published>2019-06-23T10:45:00.000Z</published>
    <updated>2019-06-23T10:58:12.564Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>转: <a href="https://mp.weixin.qq.com/s/D6PeQ_lzcaY8pmOLqTY-gQ" target="_blank" rel="noopener">运维咖啡吧</a>（微信号：ops-coffee），作者：37丫37</p></blockquote><h2 id="隐藏版本号"><a href="#隐藏版本号" class="headerlink" title="隐藏版本号"></a>隐藏版本号</h2><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">http</span> &#123;</span><br><span class="line">    <span class="attribute">server_tokens</span> <span class="literal">off</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="开启HTTPS"><a href="#开启HTTPS" class="headerlink" title="开启HTTPS"></a>开启HTTPS</h2><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">server</span> &#123;</span><br><span class="line">    <span class="attribute">listen</span> <span class="number">443</span>;</span><br><span class="line">    <span class="attribute">server_name</span> ops-coffee.cn;</span><br><span class="line"></span><br><span class="line">    <span class="attribute">ssl</span> <span class="literal">on</span>;</span><br><span class="line">    <span class="attribute">ssl_certificate</span> /etc/nginx/server.crt;</span><br><span class="line">    <span class="attribute">ssl_certificate_key</span> /etc/nginx/server.key;</span><br><span class="line">    <span class="attribute">ssl_protocols</span>       TLSv1 TLSv1.<span class="number">1</span> TLSv1.<span class="number">2</span>;</span><br><span class="line">    <span class="attribute">ssl_ciphers</span>         HIGH:!aNULL:!MD5;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>ssl on： 开启https</p><p>ssl_certificate： 配置nginx ssl证书的路径</p><p>ssl_certificate_key： 配置nginx ssl证书key的路径</p><p>ssl_protocols： 指定客户端建立连接时使用的ssl协议版本，如果不需要兼容TSLv1，直接去掉即可</p><p>ssl_ciphers： 指定客户端连接时所使用的加密算法，你可以再这里配置更高安全的算法</p><h2 id="添加黑白名单"><a href="#添加黑白名单" class="headerlink" title="添加黑白名单"></a>添加黑白名单</h2><p>白名单配置</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">location</span> /admin/ &#123;</span><br><span class="line">    <span class="attribute">allow</span>   <span class="number">192.168.1.0</span>/<span class="number">24</span>;</span><br><span class="line">    <span class="attribute">deny</span>    all;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>上边表示只允许<code>192.168.1.0/24</code>网段的主机访问，拒绝其他所有</p><p>也可以写成黑名单的方式禁止某些地址访问，允许其他所有，例如</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">location</span> /ops-coffee/ &#123;</span><br><span class="line">    <span class="attribute">deny</span>   <span class="number">192.168.1.0</span>/<span class="number">24</span>;</span><br><span class="line">    <span class="attribute">allow</span>    all;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>更多的时候客户端请求会经过层层代理，我们需要通过<code>$http_x_forwarded_for</code>来进行限制，可以这样写</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">set</span> <span class="variable">$allow</span> <span class="literal">false</span>;</span><br><span class="line"><span class="attribute">if</span> (<span class="variable">$http_x_forwarded_for</span> = <span class="string">"211.144.204.2"</span>) &#123; <span class="attribute">set</span> <span class="variable">$allow</span> <span class="literal">true</span>; &#125;</span><br><span class="line"><span class="attribute">if</span> (<span class="variable">$http_x_forwarded_for</span> <span class="regexp">~ "108.2.66.[89]")</span> &#123; <span class="attribute">set</span> <span class="variable">$allow</span> <span class="literal">true</span>; &#125;</span><br><span class="line"><span class="attribute">if</span> (<span class="variable">$allow</span> = <span class="literal">false</span>) &#123; <span class="attribute">return</span> <span class="number">404</span>; &#125;</span><br></pre></td></tr></table></figure><h2 id="限制请求方法"><a href="#限制请求方法" class="headerlink" title="限制请求方法"></a>限制请求方法</h2><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">if</span> (<span class="variable">$request_method</span> !<span class="regexp">~ ^(GET|POST)$</span> ) &#123;</span><br><span class="line">    <span class="attribute">return</span> <span class="number">405</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>$request_method</code>能够获取到请求nginx的method</p><p>配置只允许GET\POST方法访问，其他的method返回405</p><h2 id="拒绝User-Agent"><a href="#拒绝User-Agent" class="headerlink" title="拒绝User-Agent"></a>拒绝User-Agent</h2><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">if</span> (<span class="variable">$http_user_agent</span> <span class="regexp">~* LWP::Simple|BBBike|wget|curl)</span> &#123;</span><br><span class="line">    <span class="attribute">return</span> <span class="number">444</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>可能有一些不法者会利用wget/curl等工具扫描我们的网站，我们可以通过禁止相应的user-agent来简单的防范</p><p>Nginx的444状态比较特殊，如果返回444那么客户端将不会收到服务端返回的信息，就像是网站无法连接一样</p><h2 id="图片防盗链"><a href="#图片防盗链" class="headerlink" title="图片防盗链"></a>图片防盗链</h2><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">location</span> /images/ &#123;</span><br><span class="line">    <span class="attribute">valid_referers</span> <span class="literal">none</span> <span class="literal">blocked</span> www.ops-coffee.cn ops-coffee.cn;</span><br><span class="line">    <span class="attribute">if</span> (<span class="variable">$invalid_referer</span>) &#123;</span><br><span class="line">        <span class="attribute">return</span>  <span class="number">403</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>valid_referers： 验证referer，其中<code>none</code>允许<code>referer</code>为空，blocked允许不带协议的请求，除了以上两类外仅允许referer为<a href="http://www.ops-coffee.cn或ops-coffee.cn时访问images下的图片资源，否则返回403" target="_blank" rel="noopener">www.ops-coffee.cn或ops-coffee.cn时访问images下的图片资源，否则返回403</a></p><p>当然你也可以给不符合referer规则的请求重定向到一个默认的图片，比如下边这样</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">location</span> /images/ &#123;</span><br><span class="line">    <span class="attribute">valid_referers</span> <span class="literal">blocked</span> www.ops-coffee.cn ops-coffee.cn</span><br><span class="line">    if (<span class="variable">$invalid_referer</span>) &#123;</span><br><span class="line">        <span class="attribute">rewrite</span><span class="regexp"> ^/images/.*\.(gif|jpg|jpeg|png)$</span> /static/qrcode.jpg <span class="literal">last</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="控制并发连接数"><a href="#控制并发连接数" class="headerlink" title="控制并发连接数"></a>控制并发连接数</h2><p>可以通过<code>ngx_http_limit_conn_module</code>模块限制一个IP的并发连接数</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">http</span> &#123;</span><br><span class="line">    <span class="attribute">limit_conn_zone</span> <span class="variable">$binary_remote_addr</span> zone=ops:<span class="number">10m</span>;</span><br><span class="line"></span><br><span class="line">    <span class="section">server</span> &#123;</span><br><span class="line">        <span class="attribute">listen</span>       <span class="number">80</span>;</span><br><span class="line">        <span class="attribute">server_name</span>  ops-coffee.cn;</span><br><span class="line"></span><br><span class="line">        <span class="attribute">root</span> /home/project/webapp;</span><br><span class="line">        <span class="attribute">index</span> index.html;</span><br><span class="line"></span><br><span class="line">        <span class="attribute">location</span> / &#123;</span><br><span class="line">            <span class="attribute">limit_conn</span> ops <span class="number">10</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="attribute">access_log</span>  /tmp/nginx_access.log  main;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>limit_conn_zone： 设定保存各个键(例如<code>$binary_remote_addr</code>)状态的共享内存空间的参数，zone=空间名字:大小</p><p>大小的计算与变量有关，例如<code>$binary_remote_addr</code>变量的大小对于记录IPV4地址是固定的4 bytes，而记录IPV6地址时固定的16 bytes，存储状态在32位平台中占用32或者64 bytes，在64位平台中占用64 bytes。1m的共享内存空间可以保存大约3.2万个32位的状态，1.6万个64位的状态</p><p>limit_conn： 指定一块已经设定的共享内存空间(例如name为<code>ops</code>的空间)，以及每个给定键值的最大连接数</p><p>上边的例子表示同一IP同一时间只允许10个连接</p><p>当有多个<code>limit_conn</code>指令被配置时，所有的连接数限制都会生效</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">http</span> &#123;</span><br><span class="line">    <span class="attribute">limit_conn_zone</span> <span class="variable">$binary_remote_addr</span> zone=ops:<span class="number">10m</span>;</span><br><span class="line">    <span class="attribute">limit_conn_zone</span> <span class="variable">$server_name</span> zone=coffee:<span class="number">10m</span>;</span><br><span class="line"></span><br><span class="line">    <span class="section">server</span> &#123;</span><br><span class="line">        <span class="attribute">listen</span>       <span class="number">80</span>;</span><br><span class="line">        <span class="attribute">server_name</span>  ops-coffee.cn;</span><br><span class="line"></span><br><span class="line">        <span class="attribute">root</span> /home/project/webapp;</span><br><span class="line">        <span class="attribute">index</span> index.html;</span><br><span class="line"></span><br><span class="line">        <span class="attribute">location</span> / &#123;</span><br><span class="line">            <span class="attribute">limit_conn</span> ops <span class="number">10</span>;</span><br><span class="line">            <span class="attribute">limit_conn</span> coffee <span class="number">2000</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>上边的配置不仅会限制单一IP来源的连接数为10，同时也会限制单一虚拟服务器的总连接数为2000</p><h2 id="缓冲区溢出攻击"><a href="#缓冲区溢出攻击" class="headerlink" title="缓冲区溢出攻击"></a>缓冲区溢出攻击</h2><p>缓冲区溢出攻击 是通过将数据写入缓冲区并超出缓冲区边界和重写内存片段来实现的，限制缓冲区大小可有效防止</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">client_body_buffer_size</span>  <span class="number">1K</span>;</span><br><span class="line"><span class="attribute">client_header_buffer_size</span> <span class="number">1k</span>;</span><br><span class="line"><span class="attribute">client_max_body_size</span> <span class="number">1k</span>;</span><br><span class="line"><span class="attribute">large_client_header_buffers</span> <span class="number">2</span> <span class="number">1k</span>;</span><br></pre></td></tr></table></figure><p>client_body_buffer_size： 默认8k或16k，表示客户端请求body占用缓冲区大小。如果连接请求超过缓存区指定的值，那么这些请求实体的整体或部分将尝试写入一个临时文件。</p><p>client_header_buffer_size： 表示客户端请求头部的缓冲区大小。绝大多数情况下一个请求头不会大于1k，不过如果有来自于wap客户端的较大的cookie它可能会大于 1k，Nginx将分配给它一个更大的缓冲区，这个值可以在<code>large_client_header_buffers</code>里面设置</p><p>client_max_body_size： 表示客户端请求的最大可接受body大小，它出现在请求头部的Content-Length字段， 如果请求大于指定的值，客户端将收到一个”Request Entity Too Large” (413)错误，通常在上传文件到服务器时会受到限制</p><p>large_client_header_buffers 表示一些比较大的请求头使用的缓冲区数量和大小，默认一个缓冲区大小为操作系统中分页文件大小，通常是4k或8k，请求字段不能大于一个缓冲区大小，如果客户端发送一个比较大的头，nginx将返回”Request URI too large” (414)，请求的头部最长字段不能大于一个缓冲区，否则服务器将返回”Bad request” (400)</p><p>同时需要修改几个超时时间的配置</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">client_body_timeout</span>   <span class="number">10</span>;</span><br><span class="line"><span class="attribute">client_header_timeout</span> <span class="number">10</span>;</span><br><span class="line"><span class="attribute">keepalive_timeout</span>     <span class="number">5</span> <span class="number">5</span>;</span><br><span class="line"><span class="attribute">send_timeout</span>          <span class="number">10</span>;</span><br></pre></td></tr></table></figure><p>client_body_timeout： 表示读取请求body的超时时间，如果连接超过这个时间而客户端没有任何响应，Nginx将返回”Request time out” (408)错误</p><p>client_header_timeout： 表示读取客户端请求头的超时时间，如果连接超过这个时间而客户端没有任何响应，Nginx将返回”Request time out” (408)错误</p><p>keepalive_timeout： 参数的第一个值表示客户端与服务器长连接的超时时间，超过这个时间，服务器将关闭连接，可选的第二个参数参数表示Response头中Keep-Alive: timeout=time的time值，这个值可以使一些浏览器知道什么时候关闭连接，以便服务器不用重复关闭，如果不指定这个参数，nginx不会在应Response头中发送Keep-Alive信息</p><p>send_timeout： 表示发送给客户端应答后的超时时间，Timeout是指没有进入完整established状态，只完成了两次握手，如果超过这个时间客户端没有任何响应，nginx将关闭连接</p><h2 id="Header头设置"><a href="#Header头设置" class="headerlink" title="Header头设置"></a>Header头设置</h2><p>通过以下设置可有效防止XSS攻击</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">add_header</span> X-Frame-Options <span class="string">"SAMEORIGIN"</span>;</span><br><span class="line"><span class="attribute">add_header</span> X-XSS-Protection <span class="string">"1; mode=block"</span>;</span><br><span class="line"><span class="attribute">add_header</span> X-Content-Type-Options <span class="string">"nosniff"</span>;</span><br></pre></td></tr></table></figure><p>X-Frame-Options： 响应头表示是否允许浏览器加载frame等属性，有三个配置<code>DENY</code>禁止任何网页被嵌入,<code>SAMEORIGIN</code>只允许本网站的嵌套,<code>ALLOW-FROM</code>允许指定地址的嵌套</p><p>X-XSS-Protection： 表示启用XSS过滤（禁用过滤为<code>X-XSS-Protection: 0</code>），<code>mode=block</code>表示若检查到XSS攻击则停止渲染页面</p><p>X-Content-Type-Options： 响应头用来指定浏览器对未指定或错误指定<code>Content-Type</code>资源真正类型的猜测行为，nosniff 表示不允许任何猜测</p><p>在通常的请求响应中，浏览器会根据<code>Content-Type</code>来分辨响应的类型，但当响应类型未指定或错误指定时，浏览会尝试启用MIME-sniffing来猜测资源的响应类型，这是非常危险的</p><p>例如一个.jpg的图片文件被恶意嵌入了可执行的js代码，在开启资源类型猜测的情况下，浏览器将执行嵌入的js代码，可能会有意想不到的后果</p><p>另外还有几个关于请求头的安全配置需要注意</p><p>Content-Security-Policy： 定义页面可以加载哪些资源，</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">add_header</span> Content-Security-Policy <span class="string">"default-src 'self'"</span>;</span><br></pre></td></tr></table></figure><p>上边的配置会限制所有的外部资源，都只能从当前域名加载，其中<code>default-src</code>定义针对所有类型资源的默认加载策略，<code>self</code>允许来自相同来源的内容</p><p>Strict-Transport-Security： 会告诉浏览器用HTTPS协议代替HTTP来访问目标站点</p><p>上边的配置表示当用户第一次访问后，会返回一个包含了<code>Strict-Transport-Security</code>响应头的字段，这个字段会告诉浏览器，在接下来的31536000秒内，当前网站的所有请求都使用https协议访问，参数<code>includeSubDomains</code>是可选的，表示所有子域名也将采用同样的规则</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;转: &lt;a href=&quot;https://mp.weixin.qq.com/s/D6PeQ_lzcaY8pmOLqTY-gQ&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;运维咖啡吧&lt;/a&gt;（微信号：ops-coffee），作者：3
      
    
    </summary>
    
      <category term="服务器" scheme="http://www.flycmd.com/categories/%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    
    
      <category term="nginx" scheme="http://www.flycmd.com/tags/nginx/"/>
    
      <category term="转载" scheme="http://www.flycmd.com/tags/%E8%BD%AC%E8%BD%BD/"/>
    
  </entry>
  
  <entry>
    <title>git clean详解</title>
    <link href="http://www.flycmd.com/2019/04/17/git-clean%E8%AF%A6%E8%A7%A3/"/>
    <id>http://www.flycmd.com/2019/04/17/git-clean详解/</id>
    <published>2019-04-17T03:51:38.000Z</published>
    <updated>2019-04-25T03:18:56.089Z</updated>
    
    <content type="html"><![CDATA[<p>git clean 参数 </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">-n 显示将要删除的文件和目录；</span><br><span class="line"></span><br><span class="line">-x -----删除忽略文件已经对git来说不识别的文件</span><br><span class="line"></span><br><span class="line">-d -----删除未被添加到git的路径中的文件</span><br><span class="line"></span><br><span class="line">-f -----强制运行</span><br></pre></td></tr></table></figure><p>平时应用场景:切换分支时无法正常切换,需要清除临时更改的文件,使用<code>git clean -d -f</code></p><p>还有一种丢弃变更的命令:<code>git checkout .</code></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;git clean 参数 &lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;
      
    
    </summary>
    
      <category term="工具" scheme="http://www.flycmd.com/categories/%E5%B7%A5%E5%85%B7/"/>
    
    
      <category term="git" scheme="http://www.flycmd.com/tags/git/"/>
    
  </entry>
  
  <entry>
    <title>laravel-错误页返回json</title>
    <link href="http://www.flycmd.com/2019/03/25/laravel-%E9%94%99%E8%AF%AF%E9%A1%B5%E8%BF%94%E5%9B%9Ejson/"/>
    <id>http://www.flycmd.com/2019/03/25/laravel-错误页返回json/</id>
    <published>2019-03-25T09:59:48.000Z</published>
    <updated>2019-03-25T10:02:45.836Z</updated>
    
    <content type="html"><![CDATA[<h2 id="实现效果"><a href="#实现效果" class="headerlink" title="实现效果"></a>实现效果</h2><p><code>debug=false</code>的情况下,系统异常全部反馈json格式的错误信息.<br><code>debug=true</code>的情况下,正常显示.</p><h2 id="实现代码"><a href="#实现代码" class="headerlink" title="实现代码"></a>实现代码</h2><p>修改 <code>app/Exceptions/Handler.php</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Render an exception into an HTTP response.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span>  \Illuminate\Http\Request $request</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span>  \Exception               $exception</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> \Illuminate\Http\Response</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">render</span><span class="params">($request, Exception $exception)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> ( config(<span class="string">'app.debug'</span>) ) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">parent</span>::render($request, $exception);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        $response           = [];</span><br><span class="line">        $error              = <span class="keyword">$this</span>-&gt;convertExceptionToResponse($exception);</span><br><span class="line">        $response[<span class="string">'errno'</span>]  = $error-&gt;getStatusCode();</span><br><span class="line">        $response[<span class="string">'errmsg'</span>] = <span class="string">'something error'</span>;</span><br><span class="line"></span><br><span class="line">        $response[<span class="string">'data'</span>] = [];</span><br><span class="line">        <span class="keyword">return</span> response()-&gt;json($response, $error-&gt;getStatusCode());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;实现效果&quot;&gt;&lt;a href=&quot;#实现效果&quot; class=&quot;headerlink&quot; title=&quot;实现效果&quot;&gt;&lt;/a&gt;实现效果&lt;/h2&gt;&lt;p&gt;&lt;code&gt;debug=false&lt;/code&gt;的情况下,系统异常全部反馈json格式的错误信息.&lt;br&gt;&lt;code&gt;deb
      
    
    </summary>
    
      <category term="Laravel" scheme="http://www.flycmd.com/categories/Laravel/"/>
    
    
      <category term="laravel" scheme="http://www.flycmd.com/tags/laravel/"/>
    
      <category term="php" scheme="http://www.flycmd.com/tags/php/"/>
    
  </entry>
  
  <entry>
    <title>laravel-日志(monolog)增加请求ID</title>
    <link href="http://www.flycmd.com/2019/03/24/laravel-%E6%97%A5%E5%BF%97-monolog-%E5%A2%9E%E5%8A%A0%E8%AF%B7%E6%B1%82ID/"/>
    <id>http://www.flycmd.com/2019/03/24/laravel-日志-monolog-增加请求ID/</id>
    <published>2019-03-24T13:39:24.000Z</published>
    <updated>2019-03-25T10:00:22.166Z</updated>
    
    <content type="html"><![CDATA[<p>参考: <a href="https://blog.csdn.net/Webben/article/details/78834337" target="_blank" rel="noopener">https://blog.csdn.net/Webben/article/details/78834337</a></p><h2 id="达到的效果"><a href="#达到的效果" class="headerlink" title="达到的效果"></a>达到的效果</h2><ol><li>日志文件记录为{自定义名称}-年月日.log</li><li>日志中记录一次请求的ID,在本次请求过程中ID不变</li></ol><h2 id="实现方案"><a href="#实现方案" class="headerlink" title="实现方案"></a>实现方案</h2><p><code>config/app.php</code> 增加配置</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 日志文件名称</span></span><br><span class="line"><span class="string">'log_file_name'</span> =&gt; <span class="string">'laravel'</span>,</span><br></pre></td></tr></table></figure><p><code>config/app.php</code> 内的 <code>providers</code> 增加配置</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 增加日志ID</span></span><br><span class="line">App\Providers\LogServiceProvider::class,</span><br></pre></td></tr></table></figure><p><code>app/Providers/LogServiceProvider.php</code> 内容</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">App</span>\<span class="title">Providers</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">use</span> <span class="title">Carbon</span>\<span class="title">Carbon</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">Illuminate</span>\<span class="title">Support</span>\<span class="title">ServiceProvider</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">Monolog</span>\<span class="title">Formatter</span>\<span class="title">LineFormatter</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">Monolog</span>\<span class="title">Handler</span>\<span class="title">RotatingFileHandler</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">Monolog</span>\<span class="title">Logger</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">LogServiceProvider</span> <span class="keyword">extends</span> <span class="title">ServiceProvider</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">protected</span> $log_file;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Bootstrap any application services.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> void</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">boot</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="comment">//</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Register any application services.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> void</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">register</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;loadRequestId();</span><br><span class="line"></span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * 根据日期来分割日志</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="keyword">$this</span>-&gt;useDailyFiles();</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 生成log ID</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@auther</span> flycmd</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@date</span>   2019-03-23 17:33</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="function"><span class="keyword">function</span> <span class="title">loadRequestId</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        define(<span class="string">'REQUEST_ID'</span>, config(<span class="string">'app.log_prefix'</span>) . Carbon::now()-&gt;timestamp . mt_rand(<span class="number">10000</span>, <span class="number">99999</span>));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 根据日期来分割日志</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="function"><span class="keyword">function</span> <span class="title">useDailyFiles</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        $handler = <span class="keyword">$this</span>-&gt;getDailyHandler()-&gt;setFormatter(<span class="keyword">$this</span>-&gt;getDefaultFormatter());</span><br><span class="line"></span><br><span class="line">        $errorHandler = <span class="keyword">$this</span>-&gt;getDailyHandler(Logger::ERROR)-&gt;setFormatter(<span class="keyword">$this</span>-&gt;getDefaultFormatter());</span><br><span class="line"></span><br><span class="line">        <span class="keyword">$this</span>-&gt;app-&gt;configureMonologUsing(<span class="function"><span class="keyword">function</span> <span class="params">($monolog)</span> <span class="title">use</span> <span class="params">($handler, $errorHandler)</span> </span>&#123;</span><br><span class="line">            $monolog-&gt;pushHandler($handler);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 日志都记录到一个文件,不需要重复记录</span></span><br><span class="line"><span class="comment">//            $monolog-&gt;pushHandler($errorHandler);</span></span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 设置 日志 行格式</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> LineFormatter</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="function"><span class="keyword">function</span> <span class="title">getDefaultFormatter</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        $format = <span class="string">"[%datetime%] ["</span> . REQUEST_ID . <span class="string">"] %channel%.%level_name%: %message% %context% %extra%\n"</span>;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> LineFormatter($format, <span class="keyword">null</span>, <span class="keyword">true</span>, <span class="keyword">true</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 根据日志区分</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> \Monolog\Handler\RotatingFileHandler</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="function"><span class="keyword">function</span> <span class="title">getDailyHandler</span><span class="params">($level = Logger::DEBUG)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> RotatingFileHandler(</span><br><span class="line">            <span class="keyword">$this</span>-&gt;logPath() . <span class="keyword">$this</span>-&gt;logName(),</span><br><span class="line">            <span class="keyword">$this</span>-&gt;maxFiles(),</span><br><span class="line">            $level</span><br><span class="line">        );</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 日志文件最多个数</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> int</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="function"><span class="keyword">function</span> <span class="title">maxFiles</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> ( <span class="keyword">$this</span>-&gt;app-&gt;bound(<span class="string">'config'</span>) ) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;app-&gt;make(<span class="string">'config'</span>)-&gt;get(<span class="string">'app.log_max_files'</span>, <span class="number">30</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 日志文件名称</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> mixed</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="function"><span class="keyword">function</span> <span class="title">logPath</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        $logPath = <span class="keyword">$this</span>-&gt;app-&gt;storagePath() . <span class="string">"/logs/"</span>;</span><br><span class="line">        <span class="keyword">if</span> ( <span class="keyword">$this</span>-&gt;app-&gt;bound(<span class="string">'config'</span>) ) &#123;</span><br><span class="line">            $logPath = <span class="keyword">$this</span>-&gt;app-&gt;make(<span class="string">'config'</span>)-&gt;get(<span class="string">'app.log_path'</span>, $logPath);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> $logPath;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * log 完整文件名</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> string</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="function"><span class="keyword">function</span> <span class="title">logName</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;getLogFileName() . <span class="string">'.log'</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取日志名称</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> string</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@auther</span> flycmd</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@date</span>   2019-03-23 17:28</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="function"><span class="keyword">function</span> <span class="title">getLogFileName</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;app-&gt;make(<span class="string">'config'</span>)-&gt;get(<span class="string">'get.log_file_name'</span>) ?: <span class="string">'laravel'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;参考: &lt;a href=&quot;https://blog.csdn.net/Webben/article/details/78834337&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://blog.csdn.net/Webben/article/d
      
    
    </summary>
    
      <category term="Laravel" scheme="http://www.flycmd.com/categories/Laravel/"/>
    
    
      <category term="laravel" scheme="http://www.flycmd.com/tags/laravel/"/>
    
      <category term="php" scheme="http://www.flycmd.com/tags/php/"/>
    
  </entry>
  
  <entry>
    <title>laravel-辅助函数</title>
    <link href="http://www.flycmd.com/2019/02/23/laravel-%E8%BE%85%E5%8A%A9%E5%87%BD%E6%95%B0/"/>
    <id>http://www.flycmd.com/2019/02/23/laravel-辅助函数/</id>
    <published>2019-02-23T09:21:48.000Z</published>
    <updated>2019-02-23T09:22:09.851Z</updated>
    
    <content type="html"><![CDATA[<p>把『自定义辅助函数』存放到<code>bootstrap/helpers.php</code> or <code>app/helpers.php</code>(这个没有看推荐和实际情况)</p><p>打开<code>composer.json</code>,找到<code>autoload</code>字段,修改为:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&quot;autoload&quot;: &#123;</span><br><span class="line">    &quot;classmap&quot;: [</span><br><span class="line">        &quot;database/seeds&quot;,</span><br><span class="line">        &quot;database/factories&quot;</span><br><span class="line">    ],</span><br><span class="line">    &quot;psr-4&quot;: &#123;</span><br><span class="line">        &quot;App\\&quot;: &quot;app/&quot;</span><br><span class="line">    &#125;,</span><br><span class="line">    &quot;files&quot;: [</span><br><span class="line">        &quot;bootstrap/helpers.php&quot;</span><br><span class="line">    ]</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><p>注意逗号不要多写或者漏写。</p><p>然后执行<code>composer dumpautoload</code></p><p>执行<code>php artisan tinker</code>进入<code>tinker</code></p><p>然后在<code>tinker</code>中即可使用<code>helpers.php</code>中的函数。</p><blockquote><p>注：按 ctrl + d 退出 tinker 程序。</p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;把『自定义辅助函数』存放到&lt;code&gt;bootstrap/helpers.php&lt;/code&gt; or &lt;code&gt;app/helpers.php&lt;/code&gt;(这个没有看推荐和实际情况)&lt;/p&gt;
&lt;p&gt;打开&lt;code&gt;composer.json&lt;/code&gt;,找到&lt;code
      
    
    </summary>
    
      <category term="笔记" scheme="http://www.flycmd.com/categories/%E7%AC%94%E8%AE%B0/"/>
    
      <category term="Laravel" scheme="http://www.flycmd.com/categories/%E7%AC%94%E8%AE%B0/Laravel/"/>
    
    
      <category term="laravel" scheme="http://www.flycmd.com/tags/laravel/"/>
    
      <category term="php" scheme="http://www.flycmd.com/tags/php/"/>
    
  </entry>
  
  <entry>
    <title>laravel-项目创建</title>
    <link href="http://www.flycmd.com/2019/02/23/laravel-%E9%A1%B9%E7%9B%AE%E5%88%9B%E5%BB%BA/"/>
    <id>http://www.flycmd.com/2019/02/23/laravel-项目创建/</id>
    <published>2019-02-23T05:16:12.000Z</published>
    <updated>2019-02-23T05:18:05.563Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Composer加速"><a href="#Composer加速" class="headerlink" title="Composer加速"></a>Composer加速</h2><p><code>composer config -g repo.packagist composer https://packagist.laravel-china.org</code></p><h2 id="创建项目"><a href="#创建项目" class="headerlink" title="创建项目"></a>创建项目</h2><p><code>composer create-project laravel/laravel {项目名称} --prefer-dist &quot;5.7.*&quot;</code></p><h2 id="配置-env"><a href="#配置-env" class="headerlink" title="配置.env"></a>配置.env</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">APP_NAME=&quot;项目名称&quot;</span><br><span class="line">.</span><br><span class="line">.</span><br><span class="line">.</span><br><span class="line">APP_URL=&#123;项目域名&#125;</span><br><span class="line">.</span><br><span class="line">.</span><br><span class="line">.</span><br><span class="line">DB_DATABASE=&#123;数据库名&#125;</span><br></pre></td></tr></table></figure><blockquote><p>如果环境变量的值中包含空格，需要用双引号将值包含起来</p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;Composer加速&quot;&gt;&lt;a href=&quot;#Composer加速&quot; class=&quot;headerlink&quot; title=&quot;Composer加速&quot;&gt;&lt;/a&gt;Composer加速&lt;/h2&gt;&lt;p&gt;&lt;code&gt;composer config -g repo.packagis
      
    
    </summary>
    
      <category term="笔记" scheme="http://www.flycmd.com/categories/%E7%AC%94%E8%AE%B0/"/>
    
      <category term="Laravel" scheme="http://www.flycmd.com/categories/%E7%AC%94%E8%AE%B0/Laravel/"/>
    
    
      <category term="laravel" scheme="http://www.flycmd.com/tags/laravel/"/>
    
      <category term="php" scheme="http://www.flycmd.com/tags/php/"/>
    
  </entry>
  
  <entry>
    <title>使用openssl_encrypt方法替代mcrypt_encrypt做AES加密</title>
    <link href="http://www.flycmd.com/2019/02/16/%E4%BD%BF%E7%94%A8openssl-encrypt%E6%96%B9%E6%B3%95%E6%9B%BF%E4%BB%A3mcrypt-encrypt%E5%81%9AAES%E5%8A%A0%E5%AF%86/"/>
    <id>http://www.flycmd.com/2019/02/16/使用openssl-encrypt方法替代mcrypt-encrypt做AES加密/</id>
    <published>2019-02-16T11:32:07.000Z</published>
    <updated>2019-02-16T11:48:19.448Z</updated>
    
    <content type="html"><![CDATA[<p>最近接入某第三方支付的时候,碰到传输data数据需要进行aes加密，然后再进行签名传输,由于官方提供的sdk加密使用了mcrypt_encrypt在PHP7.1+版本被弃用,而生产环境是PHP7.2版本,故需要对官方sdk进行调整.</p><p>文档要求的加密具体内容:</p><blockquote><p>签名使用sha1(40),md5(32)，数据加密使用AES。<br>AES算法（加密算法：MCRYPT_RIJNDAEL_128，算法模式：MCRYPT_MODE_ECB，补码方式：PKCS5Padding）。<br>数据加密密钥为open_key<br>AES密文使用2进制转16进制进行网络传输，不使用base64，请开发者注意。</p></blockquote><p>官方提供的sdk加密</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="function"><span class="keyword">function</span> <span class="title">encrypt</span><span class="params">($input, $key)</span> </span>&#123;</span><br><span class="line">    $size = mcrypt_get_block_size(MCRYPT_RIJNDAEL_128, MCRYPT_MODE_ECB);</span><br><span class="line">    $input = <span class="keyword">self</span>::pkcs5_pad($input, $size);</span><br><span class="line">    $td = mcrypt_module_open(MCRYPT_RIJNDAEL_128, <span class="string">''</span>, MCRYPT_MODE_ECB, <span class="string">''</span>);</span><br><span class="line">    $iv = mcrypt_create_iv (mcrypt_enc_get_iv_size($td), MCRYPT_RAND);</span><br><span class="line">    mcrypt_generic_init($td, $key, $iv);</span><br><span class="line">    $data = mcrypt_generic($td, $input);</span><br><span class="line">    mcrypt_generic_deinit($td);</span><br><span class="line">    mcrypt_module_close($td);</span><br><span class="line">    $data = strtoupper(bin2hex($data));</span><br><span class="line">    <span class="keyword">return</span> $data;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>经过搜索发现网络上提供的方案多是<code>openssl_decrypt($str, &#39;AES-128-CBC&#39;, $encryptKey, 0, $localIV);</code>等类似方案,尝试发现数据加密错误</p><h2 id="解决思路"><a href="#解决思路" class="headerlink" title="解决思路"></a>解决思路</h2><p>分析网络上的解决方案发现大部分都是对openssl_decrypt的第二个参数进行更换,而且第二个参数是控制加密算法的,猜测是加密算法设置错了</p><p>使用官方提供的sdk在php5.6环境下生成一个加密串</p><p>使用<code>openssl_get_cipher_methods()</code>获取所有可用的加密算法(参考文档 <a href="http://php.net/manual/zh/function.openssl-decrypt.php" target="_blank" rel="noopener">http://php.net/manual/zh/function.openssl-decrypt.php</a>)</p><p>使用相同的数据遍历加密算法,找到和官方sdk一致的加密值</p><p>最终找到了使用的是<code>aes-256-ecb</code>加密算法</p><h2 id="最终方案"><a href="#最终方案" class="headerlink" title="最终方案"></a>最终方案</h2><h3 id="加密"><a href="#加密" class="headerlink" title="加密"></a>加密</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="function"><span class="keyword">function</span> <span class="title">encrypt</span><span class="params">($input, $key)</span> </span>&#123;</span><br><span class="line">    $encrypted = openssl_encrypt($input, <span class="string">'aes-256-ecb'</span>, $key, OPENSSL_RAW_DATA, <span class="string">''</span>);</span><br><span class="line">    $encrypt_msg = strtoupper(bin2hex($encrypted));</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> $encrypt_msg;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="解密"><a href="#解密" class="headerlink" title="解密"></a>解密</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="function"><span class="keyword">function</span> <span class="title">decrypt</span><span class="params">($sStr, $sKey)</span> </span>&#123;</span><br><span class="line">    $decrypted = openssl_decrypt(hex2bin($sStr), <span class="string">'aes-256-ecb'</span>, $sKey, OPENSSL_RAW_DATA);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> $decrypted;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;最近接入某第三方支付的时候,碰到传输data数据需要进行aes加密，然后再进行签名传输,由于官方提供的sdk加密使用了mcrypt_encrypt在PHP7.1+版本被弃用,而生产环境是PHP7.2版本,故需要对官方sdk进行调整.&lt;/p&gt;
&lt;p&gt;文档要求的加密具体内容:&lt;
      
    
    </summary>
    
      <category term="代码" scheme="http://www.flycmd.com/categories/%E4%BB%A3%E7%A0%81/"/>
    
      <category term="PHP" scheme="http://www.flycmd.com/categories/%E4%BB%A3%E7%A0%81/PHP/"/>
    
    
      <category term="PHP" scheme="http://www.flycmd.com/tags/PHP/"/>
    
      <category term="代码" scheme="http://www.flycmd.com/tags/%E4%BB%A3%E7%A0%81/"/>
    
      <category term="AES" scheme="http://www.flycmd.com/tags/AES/"/>
    
  </entry>
  
  <entry>
    <title>算法-两数之和</title>
    <link href="http://www.flycmd.com/2019/02/11/%E7%AE%97%E6%B3%95-%E4%B8%A4%E6%95%B0%E4%B9%8B%E5%92%8C/"/>
    <id>http://www.flycmd.com/2019/02/11/算法-两数之和/</id>
    <published>2019-02-11T10:34:45.000Z</published>
    <updated>2019-02-11T10:42:02.021Z</updated>
    
    <content type="html"><![CDATA[<p>给定一个整数数组 <code>nums</code> 和一个目标值 <code>target</code>，请你在该数组中找出和为目标值的那 两个 整数，并返回他们的数组下标。</p><p>你可以假设每种输入只会对应一个答案。但是，你不能重复利用这个数组中同样的元素。</p><p>示例:</p><blockquote><p>给定 nums = [2, 7, 11, 15], target = 9<br>因为 nums[0] + nums[1] = 2 + 7 = 9<br>所以返回 [0, 1]</p></blockquote><h2 id="穷举法-时间复杂度-O-n-2-空间复杂度-O-1"><a href="#穷举法-时间复杂度-O-n-2-空间复杂度-O-1" class="headerlink" title="穷举法 时间复杂度:O(n ^ 2) | 空间复杂度:O(1)"></a>穷举法 时间复杂度:O(n ^ 2) | 空间复杂度:O(1)</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">twoSum</span><span class="params">($nums, $target)</span> </span>&#123;</span><br><span class="line">    <span class="comment">// 生序排列数组</span></span><br><span class="line">        $length = count($nums);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> ($length&lt;= <span class="number">1</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> [<span class="number">0</span>,<span class="number">0</span>];</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> ($length === <span class="number">2</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> ($nums[<span class="number">0</span>]+$nums[<span class="number">1</span>] !== $target) &#123;</span><br><span class="line">        <span class="keyword">return</span> [<span class="number">0</span>,<span class="number">0</span>];</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> [<span class="number">0</span>,<span class="number">1</span>];</span><br><span class="line">        &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        穷举法 时间复杂度:O(n ^ <span class="number">2</span>) | 空间复杂度:O(<span class="number">1</span>)</span><br><span class="line">        <span class="keyword">for</span> ($i=<span class="number">0</span>; $i &lt; $length; $i++) &#123; </span><br><span class="line">        <span class="keyword">for</span> ($j=$i+<span class="number">1</span>; $j &lt; $length; $j++) &#123; </span><br><span class="line">        <span class="keyword">if</span> ($nums[$i] + $nums[$j] == $target) &#123;</span><br><span class="line">        <span class="keyword">return</span> [</span><br><span class="line">        $i =&gt; $nums[$i],</span><br><span class="line">        $j =&gt; $nums[$j],</span><br><span class="line">        ];</span><br><span class="line">        &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 没有匹配到</span></span><br><span class="line"><span class="keyword">return</span> [<span class="number">0</span>,<span class="number">0</span>];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">print_r((<span class="keyword">new</span> Solution)-&gt;twoSum([<span class="number">3</span>,<span class="number">7</span>,<span class="number">4</span>,<span class="number">2</span>],<span class="number">6</span>));</span><br></pre></td></tr></table></figure><h2 id="此种方式改变了数组下标-无法完成目标答案-如果只取值是我可以想到的最优解"><a href="#此种方式改变了数组下标-无法完成目标答案-如果只取值是我可以想到的最优解" class="headerlink" title="此种方式改变了数组下标,无法完成目标答案,如果只取值是我可以想到的最优解"></a>此种方式改变了数组下标,无法完成目标答案,如果只取值是我可以想到的最优解</h2><p>时间复杂度:O(n)</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">twoSum</span><span class="params">($nums, $target)</span> </span>&#123;</span><br><span class="line">    <span class="comment">// 生序排列数组</span></span><br><span class="line">        $length = count($nums);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> ($length&lt;= <span class="number">1</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> [<span class="number">0</span>,<span class="number">0</span>];</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> ($length === <span class="number">2</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> ($nums[<span class="number">0</span>]+$nums[<span class="number">1</span>] !== $target) &#123;</span><br><span class="line">        <span class="keyword">return</span> [<span class="number">0</span>,<span class="number">0</span>];</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> [<span class="number">0</span>,<span class="number">1</span>];</span><br><span class="line">        &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">sort($nums);</span><br><span class="line"><span class="keyword">for</span> ($i=<span class="number">0</span>,$j = $length<span class="number">-1</span>; $i &lt; $j;) &#123; </span><br><span class="line"><span class="keyword">if</span> ($nums[$i]+$nums[$j] == $target) &#123;</span><br><span class="line"><span class="keyword">return</span> [</span><br><span class="line">    $i =&gt; $nums[$i],</span><br><span class="line">    $j =&gt; $nums[$j],</span><br><span class="line">    ];</span><br><span class="line">&#125;<span class="keyword">elseif</span> ($nums[$i]+$nums[$j]&lt;$target) &#123;</span><br><span class="line"><span class="comment">// 相加小于目标值,头指针+1</span></span><br><span class="line">$i++;</span><br><span class="line">&#125;<span class="keyword">else</span> &#123;</span><br><span class="line"><span class="comment">// 相加大于目标值,尾指针减1</span></span><br><span class="line">$j--;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 没有匹配到</span></span><br><span class="line"><span class="keyword">return</span> [<span class="number">0</span>,<span class="number">0</span>];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">print_r((<span class="keyword">new</span> Solution)-&gt;twoSum([<span class="number">3</span>,<span class="number">7</span>,<span class="number">4</span>,<span class="number">2</span>],<span class="number">6</span>));</span><br></pre></td></tr></table></figure><h2 id="此种方案在整个数组中查询应该会比较慢"><a href="#此种方案在整个数组中查询应该会比较慢" class="headerlink" title="此种方案在整个数组中查询应该会比较慢"></a>此种方案在整个数组中查询应该会比较慢</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">twoSum</span><span class="params">($nums, $target)</span> </span>&#123;</span><br><span class="line">    <span class="comment">// 生序排列数组</span></span><br><span class="line">        $length = count($nums);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> ($length&lt;= <span class="number">1</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> [<span class="number">0</span>,<span class="number">0</span>];</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> ($length === <span class="number">2</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> ($nums[<span class="number">0</span>]+$nums[<span class="number">1</span>] !== $target) &#123;</span><br><span class="line">        <span class="keyword">return</span> [<span class="number">0</span>,<span class="number">0</span>];</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> [<span class="number">0</span>,<span class="number">1</span>];</span><br><span class="line">        &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> ($i=<span class="number">0</span>; $i &lt; $length<span class="number">-1</span>; $i++) &#123; </span><br><span class="line"><span class="comment">// 计算另一半的值</span></span><br><span class="line">$complement = $target - $nums[$i];</span><br><span class="line"></span><br><span class="line"><span class="comment">// 获取另一半值的下标</span></span><br><span class="line">$keys = array_keys($nums,$complement);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 下标存在一个且和当前目标值不相同</span></span><br><span class="line"><span class="keyword">if</span> (count($keys) == <span class="number">1</span> &amp;&amp; $keys[<span class="number">0</span>] !== $i) &#123;</span><br><span class="line"><span class="keyword">return</span> [</span><br><span class="line">$i,</span><br><span class="line">$keys[<span class="number">0</span>]</span><br><span class="line">];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 下标存在多个,返回一个和目标值不相同的</span></span><br><span class="line"><span class="keyword">if</span> (count($keys) &gt; <span class="number">1</span>) &#123;</span><br><span class="line"><span class="comment">// 移除当前的key</span></span><br><span class="line"><span class="keyword">if</span> (array_search($i, $keys) !== <span class="keyword">false</span>) &#123;</span><br><span class="line"><span class="keyword">unset</span>($keys[array_search($i, $keys)]);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> ([$i,array_pop($keys)]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 没有匹配到</span></span><br><span class="line"><span class="keyword">return</span> [<span class="number">0</span>,<span class="number">0</span>];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">print_r((<span class="keyword">new</span> Solution)-&gt;twoSum([<span class="number">3</span>,<span class="number">7</span>,<span class="number">4</span>,<span class="number">2</span>],<span class="number">6</span>));</span><br></pre></td></tr></table></figure><h2 id="通过临时空间进行匹配"><a href="#通过临时空间进行匹配" class="headerlink" title="通过临时空间进行匹配"></a>通过临时空间进行匹配</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">twoSum</span><span class="params">($nums, $target)</span> </span>&#123;</span><br><span class="line">$temp = <span class="keyword">array</span>();</span><br><span class="line">        <span class="keyword">foreach</span>($nums <span class="keyword">as</span> $k=&gt;$v)&#123;</span><br><span class="line">            <span class="keyword">if</span>(<span class="keyword">isset</span>($temp[$target-$v]) &amp;&amp; $k != $temp[$target-$v])&#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">array</span>($k, $temp[$target-$v]);</span><br><span class="line">            &#125;</span><br><span class="line">            $temp[$v] = $k;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 没有匹配到</span></span><br><span class="line"><span class="keyword">return</span> [<span class="number">0</span>,<span class="number">0</span>];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">print_r((<span class="keyword">new</span> Solution)-&gt;twoSum([<span class="number">3</span>,<span class="number">7</span>,<span class="number">4</span>,<span class="number">2</span>],<span class="number">6</span>));</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;给定一个整数数组 &lt;code&gt;nums&lt;/code&gt; 和一个目标值 &lt;code&gt;target&lt;/code&gt;，请你在该数组中找出和为目标值的那 两个 整数，并返回他们的数组下标。&lt;/p&gt;
&lt;p&gt;你可以假设每种输入只会对应一个答案。但是，你不能重复利用这个数组中同样的元素。&lt;/
      
    
    </summary>
    
      <category term="算法" scheme="http://www.flycmd.com/categories/%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="PHP" scheme="http://www.flycmd.com/tags/PHP/"/>
    
      <category term="算法" scheme="http://www.flycmd.com/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>PHP 开发者容易犯的错误</title>
    <link href="http://www.flycmd.com/2019/02/04/PHP%E5%BC%80%E5%8F%91%E8%80%85%E5%AE%B9%E6%98%93%E7%8A%AF%E7%9A%84%E9%94%99%E8%AF%AF/"/>
    <id>http://www.flycmd.com/2019/02/04/PHP开发者容易犯的错误/</id>
    <published>2019-02-04T15:10:06.000Z</published>
    <updated>2019-02-05T13:11:37.991Z</updated>
    
    <content type="html"><![CDATA[<h2 id="在foreach循环后留下数组的引用"><a href="#在foreach循环后留下数组的引用" class="headerlink" title="在foreach循环后留下数组的引用"></a>在<code>foreach</code>循环后留下数组的引用</h2><p>在 <code>foreach</code> 循环中使用引用</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$arr = <span class="keyword">array</span>(<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>);</span><br><span class="line"><span class="keyword">foreach</span> ($arr <span class="keyword">as</span> &amp;$value) &#123;</span><br><span class="line">        $value = $value * <span class="number">2</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// $arr 现在是 array(2, 4, 6, 8)</span></span><br></pre></td></tr></table></figure><p>在上述例子，在代码执行完以后，<code>$value</code>仍保留在作用域内，并保留着对数组最后一个元素的引用。之后与<code>$value</code>相关的操作会无意中修改数组中最后一个元素的值。</p><p>你要记住 <code>foreach</code> 并不会产生一个块级作用域。因此，在上面例子中 <code>$value</code> 是一个全局引用变量。在 <code>foreach</code> 遍历中，每一次迭代都会形成一个对 <code>$arr</code> 下一个元素的引用。当遍历结束后， <code>$value</code> 会引用 <code>$arr</code> 的最后一个元素，并保留在作用域中</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">$array = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>];</span><br><span class="line"><span class="keyword">echo</span> implode(<span class="string">','</span>, $array), <span class="string">"\n"</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">foreach</span> ($array <span class="keyword">as</span> &amp;$value) &#123;&#125;    <span class="comment">// 通过引用遍历</span></span><br><span class="line"><span class="keyword">echo</span> implode(<span class="string">','</span>, $array), <span class="string">"\n"</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">foreach</span> ($array <span class="keyword">as</span> $value) &#123;&#125;     <span class="comment">// 通过赋值遍历</span></span><br><span class="line"><span class="keyword">echo</span> implode(<span class="string">','</span>, $array), <span class="string">"\n"</span>;</span><br></pre></td></tr></table></figure><p>以上代码会输出</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1,2,3</span><br><span class="line">1,2,3</span><br><span class="line">1,2,2</span><br></pre></td></tr></table></figure><p>最后一行的最后一个值是 2 ，而不是 3 ，为什么？</p><p>在完成第一个 <code>foreach</code> 遍历后， <code>$array</code> 并没有改变，但是像上述解释的那样， <code>$value</code> 留下了一个对 <code>$array</code> 最后一个元素的危险的引用（因为 <code>foreach</code> 通过引用获得 <code>$value</code> ）</p><p>这导致当运行到第二个 <code>foreach</code> ，这个”奇怪的东西”发生了。当 $value 通过赋值获得， foreach 按顺序复制每个 $array 的元素到 $value 时，第二个 foreach 里面的细节是这样的</p><ul><li>第一步：复制 <code>$array[0]</code> （也就是 1 ）到 <code>$value</code> （<code>$value</code> 其实是 <code>$array</code>最后一个元素的引用，即 <code>$array[2]</code>），所以 <code>$array[2]</code> 现在等于 1。所以 <code>$array</code> 现在包含 <code>[1, 2, 1]</code></li><li>第二步：复制 <code>$array[1]</code>（也就是 2 ）到 <code>$value</code> （ <code>$array[2]</code> 的引用），所以 <code>$array[2]</code> 现在等于 2。所以 <code>$array</code> 现在包含 <code>[1, 2, 2]</code></li><li>第三步：复制 <code>$array[2]</code>（现在等于 2 ） 到 <code>$value</code>（ <code>$array[2]</code> 的引用），所以 <code>$array[2]</code> 现在等于 2 。所以 <code>$array</code> 现在包含 <code>[1, 2, 2]</code></li></ul><p>为了在 <code>foreach</code> 中方便的使用引用而免遭这种麻烦，请在 <code>foreach</code> 执行完毕后 <code>unset()</code> 掉这个保留着引用的变量。例如</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$arr = <span class="keyword">array</span>(<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>);</span><br><span class="line"><span class="keyword">foreach</span> ($arr <span class="keyword">as</span> &amp;$value) &#123;</span><br><span class="line">    $value = $value * <span class="number">2</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">unset</span>($value);   <span class="comment">// $value 不再引用 $arr[3]</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;在foreach循环后留下数组的引用&quot;&gt;&lt;a href=&quot;#在foreach循环后留下数组的引用&quot; class=&quot;headerlink&quot; title=&quot;在foreach循环后留下数组的引用&quot;&gt;&lt;/a&gt;在&lt;code&gt;foreach&lt;/code&gt;循环后留下数组的引用&lt;
      
    
    </summary>
    
      <category term="编程" scheme="http://www.flycmd.com/categories/%E7%BC%96%E7%A8%8B/"/>
    
      <category term="PHP" scheme="http://www.flycmd.com/categories/%E7%BC%96%E7%A8%8B/PHP/"/>
    
    
      <category term="PHP" scheme="http://www.flycmd.com/tags/PHP/"/>
    
  </entry>
  
  <entry>
    <title>Mac连接samba</title>
    <link href="http://www.flycmd.com/2019/02/01/Mac%E8%BF%9E%E6%8E%A5samba/"/>
    <id>http://www.flycmd.com/2019/02/01/Mac连接samba/</id>
    <published>2019-02-01T04:02:13.000Z</published>
    <updated>2019-02-01T04:04:10.839Z</updated>
    
    <content type="html"><![CDATA[<h2 id="连接"><a href="#连接" class="headerlink" title="连接"></a>连接</h2><p>打开Finder（或在桌面），<code>CMD + k</code></p><p>输入服务器地址</p><h2 id="DS-Store处理"><a href="#DS-Store处理" class="headerlink" title=".DS_Store处理"></a>.DS_Store处理</h2><p>让Finder不在远程连接时产生.DS_Store</p><p><code>defaults write com.apple.desktopservices DSDontWriteNetworkStores true</code></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;连接&quot;&gt;&lt;a href=&quot;#连接&quot; class=&quot;headerlink&quot; title=&quot;连接&quot;&gt;&lt;/a&gt;连接&lt;/h2&gt;&lt;p&gt;打开Finder（或在桌面），&lt;code&gt;CMD + k&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;输入服务器地址&lt;/p&gt;
&lt;h2 id=&quot;DS-Stor
      
    
    </summary>
    
      <category term="系统" scheme="http://www.flycmd.com/categories/%E7%B3%BB%E7%BB%9F/"/>
    
    
      <category term="mac" scheme="http://www.flycmd.com/tags/mac/"/>
    
  </entry>
  
  <entry>
    <title>nginx泛域名解析</title>
    <link href="http://www.flycmd.com/2019/01/27/nginx%E6%B3%9B%E5%9F%9F%E5%90%8D%E8%A7%A3%E6%9E%90/"/>
    <id>http://www.flycmd.com/2019/01/27/nginx泛域名解析/</id>
    <published>2019-01-27T15:14:59.000Z</published>
    <updated>2019-01-27T15:35:48.091Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>可能用到的场景:个性化域名</p></blockquote><p>配置方法:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"># 以通配符*开始的字符串</span><br><span class="line">server_name *.yourdomain.com;</span><br><span class="line"></span><br><span class="line"># 以通配符*结束的字符串</span><br><span class="line">server_name www.*;</span><br><span class="line"></span><br><span class="line"># 配置正则表达式</span><br><span class="line">server_name ~^(?.+)\.yourdomain\.com$;</span><br><span class="line">## $subdomain表示匹配到的二级域名</span><br><span class="line">server_name  ~^(?&lt;subdomain&gt;.+)\.yourdomain\.com$;</span><br></pre></td></tr></table></figure></p><h2 id="配置案例-1"><a href="#配置案例-1" class="headerlink" title="配置案例 - 1"></a>配置案例 - 1</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">listen 80;</span><br><span class="line">server_name ~^(?&lt;subdomain&gt;.+).\yourdomain\.com$;</span><br><span class="line"></span><br><span class="line">index index.html index.htm index.php;</span><br><span class="line">root /home/wwwroot/$subdomain/;</span><br><span class="line"></span><br><span class="line">...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="配置案例-2"><a href="#配置案例-2" class="headerlink" title="配置案例 - 2"></a>配置案例 - 2</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">erver &#123;</span><br><span class="line">listen 80;</span><br><span class="line">server_name *.yourdomain.com;</span><br><span class="line"></span><br><span class="line">index index.html index.htm index.php;</span><br><span class="line"></span><br><span class="line">if ($host ~* ^([^\.]+)\.([^\.]+\.[^\.]+)$) &#123;</span><br><span class="line">set $subdomain $1;</span><br><span class="line">    set $domain $2;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">location / &#123;</span><br><span class="line">  root /home/wwwroot/$subdomain/;</span><br><span class="line">  index index.php index.html index.htm;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="配置案例-3-nginx将泛解析的匹配域名绑定到子目录的配置方法如下"><a href="#配置案例-3-nginx将泛解析的匹配域名绑定到子目录的配置方法如下" class="headerlink" title="配置案例 - 3 (nginx将泛解析的匹配域名绑定到子目录的配置方法如下)"></a>配置案例 - 3 (nginx将泛解析的匹配域名绑定到子目录的配置方法如下)</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">     listen        80;</span><br><span class="line">     server_name   domain.com    *.domain.com;</span><br><span class="line"></span><br><span class="line">    if ($host ~* ^([^\.]+)\.([^\.]+\.[^\.]+)$) &#123;</span><br><span class="line">         set $subdomain $1;</span><br><span class="line">         set $domain $2;</span><br><span class="line">     &#125;</span><br><span class="line"></span><br><span class="line">    location / &#123;</span><br><span class="line">         root    /home/wwwroot/$domain/$subdomain/;</span><br><span class="line">         index   index.php index.html index.htm;</span><br><span class="line">     &#125;</span><br><span class="line"></span><br><span class="line">    location ~ \.php$ &#123;</span><br><span class="line">         root           /home/wwwroot/$domain/$subdomain/;</span><br><span class="line">         fastcgi_pass   127.0.0.1:9100;</span><br><span class="line">         fastcgi_index  index.php;</span><br><span class="line">         fastcgi_param  SCRIPT_FILENAME  $document_root$fastcgi_script_name;</span><br><span class="line">         include        fastcgi_params;</span><br><span class="line">     &#125;</span><br><span class="line"></span><br><span class="line">     ...</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><h2 id="配置案例-4-绑定子域名到统一目录，作为用户个性域名"><a href="#配置案例-4-绑定子域名到统一目录，作为用户个性域名" class="headerlink" title="配置案例 - 4 (绑定子域名到统一目录，作为用户个性域名)"></a>配置案例 - 4 (绑定子域名到统一目录，作为用户个性域名)</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line"></span><br><span class="line">    listen   80;</span><br><span class="line">    server_name yourdomain.com www.yourdomain.cpm ~^(?&lt;subdomain&gt;.+)\.m\.yourdomain\.com$;</span><br><span class="line"></span><br><span class="line">    index index.php index.html index.htm;</span><br><span class="line">    set $root_path &apos;/var/www/test&apos;;</span><br><span class="line">    root $root_path;</span><br><span class="line"></span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>实现效果:<code>user.m.yourdomain.com</code> 跳转到用户自己页面</p><h2 id="配置案例-5-绑定子域名到不同目录（子站）"><a href="#配置案例-5-绑定子域名到不同目录（子站）" class="headerlink" title="配置案例 - 5 (绑定子域名到不同目录（子站）)"></a>配置案例 - 5 (绑定子域名到不同目录（子站）)</h2><p>html<br>├── bbs<br>└── www</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">        listen       80;</span><br><span class="line">        server_name  ~^(?&lt;subdomain&gt;.+)\.yourdomain\.com$;</span><br><span class="line">        root   html/$subdomain; </span><br><span class="line">        index  index.html index.htm index.php;</span><br><span class="line"></span><br><span class="line">...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>html为nginx的安装目录下默认的存放源代码的路径。</p><p>bbs为论坛程序源代码路径</p><p>www为主页程序源代码路径</p><p>把相应程序放入上面的路径通过</p><p><a href="http://www.youdomain.com" target="_blank" rel="noopener">http://www.youdomain.com</a> 访问的就是主页</p><p><a href="http://bbs.yourdomain.com" target="_blank" rel="noopener">http://bbs.yourdomain.com</a> 访问的就是论坛</p><p>其它二级域名类推。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;可能用到的场景:个性化域名&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;配置方法:&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;
      
    
    </summary>
    
      <category term="服务器" scheme="http://www.flycmd.com/categories/%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    
    
      <category term="nginx" scheme="http://www.flycmd.com/tags/nginx/"/>
    
  </entry>
  
  <entry>
    <title>网络时代如何学习？</title>
    <link href="http://www.flycmd.com/2019/01/20/%E7%BD%91%E7%BB%9C%E6%97%B6%E4%BB%A3%E5%A6%82%E4%BD%95%E5%AD%A6%E4%B9%A0%EF%BC%9F/"/>
    <id>http://www.flycmd.com/2019/01/20/网络时代如何学习？/</id>
    <published>2019-01-20T11:53:42.000Z</published>
    <updated>2019-01-20T11:58:36.300Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>文章地址:<a href="https://zhuanlan.zhihu.com/p/38479764" target="_blank" rel="noopener">https://zhuanlan.zhihu.com/p/38479764</a></p></blockquote><p>最基本的底线是要明白“实践”的重要性，并且亲身上阵去实践。</p><p><strong>在实际操作中，我们要有意识地对网络上的知识进行取舍，以节省时间和精力，然后对最重要的知识进行不断的实践。</strong></p><p>具体方法是：<strong>拒绝被动输入知识，按需主动查找知识。</strong></p><p>拒绝被动输入知识，指的是拒绝接受知识类APP没完没了的推送。APP做出来是需要流量盈利的。它们要么卖你东西，要么插播广告，因此推送的多是些吸引眼球的趣味知识，少有高质量的干货。偶尔推送一些干货，也不一定是你当前最需要的。这些低质量的或者不相关的知识如果输入太多，就会在无形之中不知不觉地消耗了你的时间和注意力，让你不能专注于学习实践对你来说最重要的知识。<br>按需主动查找知识，指的是在需要解决问题的时候去主动查找知识。这样做能保证知识和你目前面临的问题高度相关，也让你在查找的过程中通过比较筛选出质量高的干货来学习。更重要的是，由于你查找知识是为了解决当前面临的问题，所以在学到知识以后会马上实践，如此一来知识学习和行动反馈就能双管齐下、相得益彰。</p><p>总之，<strong>珍惜自己的时间和注意力，拒绝被动的知识接收，思考自己真正需要什么，按需查找对你来说重要而紧急的知识和信息。</strong>这样不仅能解决你面临的问题，还能通过实践得到第一手经验，进一步加深你对知识的理解，是一箭双雕，更是从“知识焦虑”和“虚假自信”中解放自我，做知识和生活的主人。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;文章地址:&lt;a href=&quot;https://zhuanlan.zhihu.com/p/38479764&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://zhuanlan.zhihu.com/p/38479764&lt;/a
      
    
    </summary>
    
      <category term="其他" scheme="http://www.flycmd.com/categories/%E5%85%B6%E4%BB%96/"/>
    
    
      <category term="解决方案" scheme="http://www.flycmd.com/tags/%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/"/>
    
  </entry>
  
  <entry>
    <title>PHP命令行</title>
    <link href="http://www.flycmd.com/2019/01/02/PHP%E5%91%BD%E4%BB%A4%E8%A1%8C/"/>
    <id>http://www.flycmd.com/2019/01/02/PHP命令行/</id>
    <published>2019-01-02T12:05:17.000Z</published>
    <updated>2019-01-02T12:29:05.843Z</updated>
    
    <content type="html"><![CDATA[<h2 id="php命令行-CLI-参数详解"><a href="#php命令行-CLI-参数详解" class="headerlink" title="php命令行(CLI)参数详解"></a>php命令行(CLI)参数详解</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line">Usage: php [options] [-f] &lt;file&gt; [--] [args...]</span><br><span class="line">   php [options] -r &lt;code&gt; [--] [args...]</span><br><span class="line">   php [options] [-B &lt;begin_code&gt;] -R &lt;code&gt; [-E &lt;end_code&gt;] [--] [args...]</span><br><span class="line">   php [options] [-B &lt;begin_code&gt;] -F &lt;file&gt; [-E &lt;end_code&gt;] [--] [args...]</span><br><span class="line">   php [options] -S &lt;addr&gt;:&lt;port&gt; [-t docroot] [router]</span><br><span class="line">   php [options] -- [args...]</span><br><span class="line">   php [options] -a</span><br><span class="line">   </span><br><span class="line">-a               Run as interactive shell</span><br><span class="line">-c &lt;path&gt;|&lt;file&gt; Look for php.ini file in this directory</span><br><span class="line">-n               No configuration (ini) files will be used</span><br><span class="line">-d foo[=bar]     Define INI entry foo with value &apos;bar&apos;</span><br><span class="line">-e               Generate extended information for debugger/profiler</span><br><span class="line">-f &lt;file&gt;        Parse and execute &lt;file&gt;.</span><br><span class="line">-h               This help</span><br><span class="line">-i               PHP information</span><br><span class="line">-l               Syntax check only (lint)</span><br><span class="line">-m               Show compiled in modules</span><br><span class="line">-r &lt;code&gt;        Run PHP &lt;code&gt; without using script tags &lt;?..?&gt;</span><br><span class="line">-B &lt;begin_code&gt;  Run PHP &lt;begin_code&gt; before processing input lines</span><br><span class="line">-R &lt;code&gt;        Run PHP &lt;code&gt; for every input line</span><br><span class="line">-F &lt;file&gt;        Parse and execute &lt;file&gt; for every input line</span><br><span class="line">-E &lt;end_code&gt;    Run PHP &lt;end_code&gt; after processing all input lines</span><br><span class="line">-H               Hide any passed arguments from external tools.</span><br><span class="line">-S &lt;addr&gt;:&lt;port&gt; Run with built-in web server.</span><br><span class="line">-t &lt;docroot&gt;     Specify document root &lt;docroot&gt; for built-in web server.</span><br><span class="line">-s               Output HTML syntax highlighted source.</span><br><span class="line">-v               Version number</span><br><span class="line">-w               Output source with stripped comments and whitespace.</span><br><span class="line">-z &lt;file&gt;        Load Zend extension &lt;file&gt;.</span><br><span class="line"></span><br><span class="line">args...          Arguments passed to script. Use -- args when first argument</span><br><span class="line">               starts with - or script is read from stdin</span><br><span class="line"></span><br><span class="line">--ini            Show configuration file names</span><br><span class="line"></span><br><span class="line">--rf &lt;name&gt;      Show information about function &lt;name&gt;.</span><br><span class="line">--rc &lt;name&gt;      Show information about class &lt;name&gt;.</span><br><span class="line">--re &lt;name&gt;      Show information about extension &lt;name&gt;.</span><br><span class="line">--rz &lt;name&gt;      Show information about Zend extension &lt;name&gt;.</span><br><span class="line">--ri &lt;name&gt;      Show configuration for extension &lt;name&gt;.</span><br></pre></td></tr></table></figure><h2 id="以交互式shell的方式运行PHP"><a href="#以交互式shell的方式运行PHP" class="headerlink" title="以交互式shell的方式运行PHP"></a>以交互式shell的方式运行PHP</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">php -a</span><br></pre></td></tr></table></figure><h2 id="运行内建的Web服务器"><a href="#运行内建的Web服务器" class="headerlink" title="运行内建的Web服务器"></a>运行内建的Web服务器</h2><p>默认以当前目录为工作目录</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">php -S localhost:8000</span><br></pre></td></tr></table></figure><p>使用-t参数指定其它的目录作为工作目录</p><p><a href="http://php.net/manual/zh/features.commandline.webserver.php" target="_blank" rel="noopener">官方文档</a></p><h2 id="查找PHP的配置文件"><a href="#查找PHP的配置文件" class="headerlink" title="查找PHP的配置文件"></a>查找PHP的配置文件</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">php --ini</span><br></pre></td></tr></table></figure><p>可以列出当前PHP的配置文件信息</p><h2 id="查看类-函数-扩展信息"><a href="#查看类-函数-扩展信息" class="headerlink" title="查看类/函数/扩展信息"></a>查看类/函数/扩展信息</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">php --info</span><br></pre></td></tr></table></figure><p>可以配合<code>grep</code>使用</p><p>我们可以使用下列参数更加方便的查看这些信息</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">--rf       显示关于函数  的信息.</span><br><span class="line">--rc       显示关于类  的信息.</span><br><span class="line">--re       显示关于扩展  的信息.</span><br><span class="line">--rz       显示关于Zend扩展  的信息.</span><br><span class="line">--ri       显示扩展  的配置信息.</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># 查看扩展redis的配置信息</span><br><span class="line">php --ri redis</span><br><span class="line"></span><br><span class="line"># 查看redis类的信息</span><br><span class="line">php --rc redis</span><br><span class="line"></span><br><span class="line"># 查看函数printf的信息</span><br><span class="line">php --rf printf</span><br></pre></td></tr></table></figure><h2 id="语法检查"><a href="#语法检查" class="headerlink" title="语法检查"></a>语法检查</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">php -l index.php</span><br></pre></td></tr></table></figure><p>有错误的情况</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ php -l index.php</span><br><span class="line">PHP Parse error:  syntax error, unexpected &apos;echo&apos; (T_ECHO) in index.php on line 3</span><br><span class="line"> </span><br><span class="line">Parse error: syntax error, unexpected &apos;echo&apos; (T_ECHO) in index.php on line 3</span><br><span class="line">Errors parsing index.php</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;php命令行-CLI-参数详解&quot;&gt;&lt;a href=&quot;#php命令行-CLI-参数详解&quot; class=&quot;headerlink&quot; title=&quot;php命令行(CLI)参数详解&quot;&gt;&lt;/a&gt;php命令行(CLI)参数详解&lt;/h2&gt;&lt;figure class=&quot;highli
      
    
    </summary>
    
      <category term="编程" scheme="http://www.flycmd.com/categories/%E7%BC%96%E7%A8%8B/"/>
    
      <category term="PHP" scheme="http://www.flycmd.com/categories/%E7%BC%96%E7%A8%8B/PHP/"/>
    
    
      <category term="PHP" scheme="http://www.flycmd.com/tags/PHP/"/>
    
  </entry>
  
  <entry>
    <title>PHP中array_merge和array相加的区别分析</title>
    <link href="http://www.flycmd.com/2018/11/23/PHP%E4%B8%ADarray-merge%E5%92%8Carray%E7%9B%B8%E5%8A%A0%E7%9A%84%E5%8C%BA%E5%88%AB%E5%88%86%E6%9E%90/"/>
    <id>http://www.flycmd.com/2018/11/23/PHP中array-merge和array相加的区别分析/</id>
    <published>2018-11-23T12:36:10.000Z</published>
    <updated>2018-11-23T12:43:08.361Z</updated>
    
    <content type="html"><![CDATA[<h2 id="键名是string"><a href="#键名是string" class="headerlink" title="键名是string"></a>键名是string</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$arr1 = <span class="keyword">array</span>(<span class="string">'a'</span>=&gt;<span class="string">'PHP'</span>);</span><br><span class="line">$arr2 = <span class="keyword">array</span>(<span class="string">'a'</span>=&gt;<span class="string">'JAVA'</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//如果键名为字符，且键名相同，array_merge()后面数组元素值会覆盖前面数组元素值</span></span><br><span class="line">print_r(array_merge($arr1,$arr2)); <span class="comment">//Array ( [a] =&gt; JAVA )</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//如果键名为字符，且键名相同，数组相加会将最先出现的值作为结果</span></span><br><span class="line">print_r($arr1+$arr2); <span class="comment">//Array ( [a] =&gt; PHP )</span></span><br></pre></td></tr></table></figure><h2 id="键名是数字"><a href="#键名是数字" class="headerlink" title="键名是数字"></a>键名是数字</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$arr1 = <span class="keyword">array</span>(<span class="string">"C"</span>,<span class="string">"PHP"</span>);</span><br><span class="line">$arr2 = <span class="keyword">array</span>(<span class="string">"JAVA"</span>,<span class="string">"PHP"</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//如果键名为数字，array_merge()不会进行覆盖</span></span><br><span class="line">print_r(array_merge($arr1,$arr2));<span class="comment">//Array ( [0] =&gt; C [1] =&gt; PHP [2] =&gt; JAVA [3] =&gt; PHP )</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//如果键名为数组，数组相加会将最先出现的值作为结果，后面键名相同的会被抛弃</span></span><br><span class="line">print_r($arr1+$arr2);<span class="comment">//Array ( [0] =&gt; C [1] =&gt; PHP )</span></span><br></pre></td></tr></table></figure><h2 id="如何最有效的获取字符键名相同值不同的两个数组值集合"><a href="#如何最有效的获取字符键名相同值不同的两个数组值集合" class="headerlink" title="如何最有效的获取字符键名相同值不同的两个数组值集合"></a>如何最有效的获取字符键名相同值不同的两个数组值集合</h2><p>array_merge_recursive — 递归地合并一个或多个数组，如果输入的数组中有相同的字符串键名，则这些值会被合并到一个数组中去。如下例：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$arr1 = <span class="keyword">array</span>(<span class="string">"a"</span>=&gt;<span class="string">"php"</span>,<span class="string">"c"</span>);</span><br><span class="line">$arr2 = <span class="keyword">array</span>(<span class="string">"a"</span>=&gt;<span class="string">"java"</span>,<span class="string">"c"</span>,<span class="string">"ruby"</span>);</span><br><span class="line">print_r(array_merge_recursive($arr1, $arr2));</span><br></pre></td></tr></table></figure><p>结果如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">Array</span><br><span class="line">(</span><br><span class="line">    [a] =&gt; Array</span><br><span class="line">        (</span><br><span class="line">            [0] =&gt; php</span><br><span class="line">            [1] =&gt; java</span><br><span class="line">        )</span><br><span class="line">    [0] =&gt; c</span><br><span class="line">    [1] =&gt; c</span><br><span class="line">    [2] =&gt; ruby</span><br><span class="line">)</span><br></pre></td></tr></table></figure><p>这样，就可以获取多个数组中键名相同的元素值集合了。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;键名是string&quot;&gt;&lt;a href=&quot;#键名是string&quot; class=&quot;headerlink&quot; title=&quot;键名是string&quot;&gt;&lt;/a&gt;键名是string&lt;/h2&gt;&lt;figure class=&quot;highlight php&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td 
      
    
    </summary>
    
      <category term="编程" scheme="http://www.flycmd.com/categories/%E7%BC%96%E7%A8%8B/"/>
    
      <category term="PHP" scheme="http://www.flycmd.com/categories/%E7%BC%96%E7%A8%8B/PHP/"/>
    
    
      <category term="PHP" scheme="http://www.flycmd.com/tags/PHP/"/>
    
      <category term="数组" scheme="http://www.flycmd.com/tags/%E6%95%B0%E7%BB%84/"/>
    
  </entry>
  
  <entry>
    <title>MySQL统计一个列中不同值的数量</title>
    <link href="http://www.flycmd.com/2018/09/06/MySQL%E7%BB%9F%E8%AE%A1%E4%B8%80%E4%B8%AA%E5%88%97%E4%B8%AD%E4%B8%8D%E5%90%8C%E5%80%BC%E7%9A%84%E6%95%B0%E9%87%8F/"/>
    <id>http://www.flycmd.com/2018/09/06/MySQL统计一个列中不同值的数量/</id>
    <published>2018-09-06T02:26:05.000Z</published>
    <updated>2018-09-06T03:04:17.141Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>需求: 我们存在一个用户来源表，用来标记用户从哪个渠道注册进来。</p></blockquote><blockquote><p>其中 origin 是用户来源，其中的值有 iPhone 、Android 、Web 三种，现在需要分别统计由这三种渠道注册的用户数量。 </p></blockquote><h2 id="解决方案1"><a href="#解决方案1" class="headerlink" title="解决方案1"></a>解决方案1</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">SELECT count(*) </span><br><span class="line">FROM user_operation_log </span><br><span class="line">WHERE origin = &apos;iPhone&apos;;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">SELECT count(*) </span><br><span class="line">FROM user_operation_log </span><br><span class="line">WHERE origin = &apos;Android&apos;;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">SELECT count(*) </span><br><span class="line">FROM user_operation_log </span><br><span class="line">WHERE origin = &apos;Web&apos;;</span><br></pre></td></tr></table></figure><p>缺点是有多少条件就需要查询多少次,比较繁琐.</p><h2 id="解决方案2"><a href="#解决方案2" class="headerlink" title="解决方案2"></a>解决方案2</h2><p>我们知道 count 不仅可以用来统计行数，也能统计列值的数量，例如： </p><p>统计 user_operation_log 有多少行：<br><code>SELECT count(*) FROM user_operation_log</code></p><p>统计 origin 这列值不为 NULL 的数量：<br><code>SELECT count(origin) FROM user_operation_log</code></p><p>所以我们可以利用这个特性来实现上面的需求 </p><h3 id="第一种写法（用-count-实现）"><a href="#第一种写法（用-count-实现）" class="headerlink" title="第一种写法（用 count 实现）"></a>第一种写法（用 count 实现）</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">SELECT </span><br><span class="line">  count(origin = &apos;iPhone&apos; OR NULL)  AS iPhone, </span><br><span class="line">  count(origin = &apos;Android&apos; OR NULL) AS Android, </span><br><span class="line">  count(origin = &apos;Web&apos; OR NULL)     AS Web </span><br><span class="line">FROM user_operation_log;</span><br></pre></td></tr></table></figure><h3 id="第二种写法（用-sum-实现）"><a href="#第二种写法（用-sum-实现）" class="headerlink" title="第二种写法（用 sum 实现）"></a>第二种写法（用 sum 实现）</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">SELECT </span><br><span class="line">  sum(if(origin = &apos;iPhone&apos;, 1, 0))  AS iPhone, </span><br><span class="line">  sum(if(origin = &apos;Android&apos;, 1, 0)) AS Android, </span><br><span class="line">  sum(if(origin = &apos;Web&apos;, 1, 0))     AS Web </span><br><span class="line">FROM user_operation_log;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">SELECT </span><br><span class="line">  sum(origin = &apos;iPhone&apos;)  AS iPhone, </span><br><span class="line">  sum(origin = &apos;Android&apos;) AS Android, </span><br><span class="line">  sum(origin = &apos;Web&apos;)     AS Web </span><br><span class="line">FROM user_operation_log;</span><br></pre></td></tr></table></figure><h3 id="最后一种-最优-需要看是否要统计所有类型的"><a href="#最后一种-最优-需要看是否要统计所有类型的" class="headerlink" title="最后一种(最优,需要看是否要统计所有类型的)"></a>最后一种(最优,需要看是否要统计所有类型的)</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SELECT origin,count(*) num FROM user_operation_log GROUP BY origin;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;需求: 我们存在一个用户来源表，用来标记用户从哪个渠道注册进来。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;其中 origin 是用户来源，其中的值有 iPhone 、Android 、Web 三种，现在需要分别统计由这三
      
    
    </summary>
    
      <category term="数据库" scheme="http://www.flycmd.com/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    
      <category term="mysql" scheme="http://www.flycmd.com/tags/mysql/"/>
    
  </entry>
  
  <entry>
    <title>Linux/Mac命令</title>
    <link href="http://www.flycmd.com/2018/09/03/Linux-Mac%E5%91%BD%E4%BB%A4/"/>
    <id>http://www.flycmd.com/2018/09/03/Linux-Mac命令/</id>
    <published>2018-09-03T09:17:16.000Z</published>
    <updated>2019-02-01T04:02:29.597Z</updated>
    
    <content type="html"><![CDATA[<h2 id="遍历显示指定目录下的所有文件"><a href="#遍历显示指定目录下的所有文件" class="headerlink" title="遍历显示指定目录下的所有文件"></a>遍历显示指定目录下的所有文件</h2><p>绝对路径显示</p><p><code>find $PWD -type f</code></p><p>相对路径显示</p><p><code>find . -type f</code></p><p>遍历文件和目录(含隐藏的)<br><code>find $PWD | xargs ls -Rl</code></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;遍历显示指定目录下的所有文件&quot;&gt;&lt;a href=&quot;#遍历显示指定目录下的所有文件&quot; class=&quot;headerlink&quot; title=&quot;遍历显示指定目录下的所有文件&quot;&gt;&lt;/a&gt;遍历显示指定目录下的所有文件&lt;/h2&gt;&lt;p&gt;绝对路径显示&lt;/p&gt;
&lt;p&gt;&lt;code&gt;fi
      
    
    </summary>
    
      <category term="系统" scheme="http://www.flycmd.com/categories/%E7%B3%BB%E7%BB%9F/"/>
    
    
      <category term="linux" scheme="http://www.flycmd.com/tags/linux/"/>
    
      <category term="mac" scheme="http://www.flycmd.com/tags/mac/"/>
    
      <category term="命令" scheme="http://www.flycmd.com/tags/%E5%91%BD%E4%BB%A4/"/>
    
  </entry>
  
  <entry>
    <title>PHP 去掉url指定参数</title>
    <link href="http://www.flycmd.com/2018/08/28/PHP-%E5%8E%BB%E6%8E%89url%E6%8C%87%E5%AE%9A%E5%8F%82%E6%95%B0/"/>
    <id>http://www.flycmd.com/2018/08/28/PHP-去掉url指定参数/</id>
    <published>2018-08-28T02:46:27.000Z</published>
    <updated>2018-08-28T02:47:52.177Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 去掉URL中指定的参数, 删除无用参数</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> array|string $paramNames 要移除的参数</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> string       $url        要处理的地址</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> string</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">removeUrlParam</span><span class="params">($paramNames, $url)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> ( is_string($paramNames) ) &#123;</span><br><span class="line">        $paramNames = <span class="keyword">array</span>($paramNames);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> ( !$paramNames ) &#123;</span><br><span class="line">        <span class="keyword">return</span> $url;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    $names = <span class="keyword">array</span>();</span><br><span class="line">    <span class="keyword">if</span> ( strpos($url, <span class="string">"?"</span>) !== <span class="keyword">false</span> ) &#123;</span><br><span class="line">        $urlInfo = explode(<span class="string">"?"</span>, $url);</span><br><span class="line">        $baseUrl = $urlInfo[<span class="number">1</span>];</span><br><span class="line">        parse_str($baseUrl, $names);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> $url;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">foreach</span> ($names <span class="keyword">as</span> $name =&gt; $v) &#123;</span><br><span class="line">        <span class="keyword">if</span> ( in_array($name, $paramNames) ) &#123;</span><br><span class="line">            <span class="keyword">unset</span>($names[$name]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> $urlInfo[<span class="number">0</span>] . <span class="string">"?"</span> . http_build_query($names);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 测试</span></span><br><span class="line">removeUrlParam(<span class="string">'b'</span>, <span class="string">'https://xxx.com?a=1&amp;b=2'</span>);</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight php&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;
      
    
    </summary>
    
      <category term="代码" scheme="http://www.flycmd.com/categories/%E4%BB%A3%E7%A0%81/"/>
    
      <category term="PHP" scheme="http://www.flycmd.com/categories/%E4%BB%A3%E7%A0%81/PHP/"/>
    
    
      <category term="PHP" scheme="http://www.flycmd.com/tags/PHP/"/>
    
      <category term="代码" scheme="http://www.flycmd.com/tags/%E4%BB%A3%E7%A0%81/"/>
    
  </entry>
  
  <entry>
    <title>Mysql查看版本号</title>
    <link href="http://www.flycmd.com/2018/08/28/Mysql%E6%9F%A5%E7%9C%8B%E7%89%88%E6%9C%AC%E5%8F%B7/"/>
    <id>http://www.flycmd.com/2018/08/28/Mysql查看版本号/</id>
    <published>2018-08-28T02:45:32.000Z</published>
    <updated>2018-08-28T02:46:04.972Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-使用命令行模式进入mysql会看到最开始的提示符"><a href="#1-使用命令行模式进入mysql会看到最开始的提示符" class="headerlink" title="1. 使用命令行模式进入mysql会看到最开始的提示符"></a>1. 使用命令行模式进入mysql会看到最开始的提示符</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Your MySQL connection id is 3 </span><br><span class="line">Server version: 5.1.69 Source distribution</span><br></pre></td></tr></table></figure><h2 id="2-命令行中使用status可以看到"><a href="#2-命令行中使用status可以看到" class="headerlink" title="2. 命令行中使用status可以看到"></a>2. 命令行中使用status可以看到</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; status; </span><br><span class="line">-------------- </span><br><span class="line">mysql Ver 14.14 Distrib 5.1.69, for redhat-linux-gnu (x86_64) using readline 5.1 </span><br><span class="line">Connection id:3 </span><br><span class="line">Current database: </span><br><span class="line">Current user: root@localhost </span><br><span class="line">SSL: Not in use </span><br><span class="line">Current pager:stdout </span><br><span class="line">Using outfile:&apos;&apos; </span><br><span class="line">Using delimiter:; </span><br><span class="line">Server version:5.1.69 Source distribution </span><br><span class="line">Protocol version:10 </span><br><span class="line">Connection: Localhost via UNIX socket </span><br><span class="line">Server characterset:utf8 </span><br><span class="line">Db characterset:utf8 </span><br><span class="line">Client characterset:utf8 </span><br><span class="line">Conn. characterset:utf8 </span><br><span class="line">UNIX socket: /var/lib/mysql/mysql.sock </span><br><span class="line">Uptime: 3 days 14 hours 50 sec </span><br><span class="line">Threads: 1 Questions: 5 Slow queries: 0 Opens: 15 Flush tables: 1 Open tables: 8 Queries per second avg: 0.0</span><br></pre></td></tr></table></figure><h2 id="3-使用系统函数"><a href="#3-使用系统函数" class="headerlink" title="3. 使用系统函数"></a>3. 使用系统函数</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select version(); </span><br><span class="line">+-----------+ </span><br><span class="line">| version() | </span><br><span class="line">+-----------+ </span><br><span class="line">| 5.1.69 | </span><br><span class="line">+-----------+ </span><br><span class="line">1 row in set (0.12 sec)</span><br></pre></td></tr></table></figure><h2 id="4-mysql-–help-grep-Distrib"><a href="#4-mysql-–help-grep-Distrib" class="headerlink" title="4. $ mysql –help | grep Distrib"></a>4. $ mysql –help | grep Distrib</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql Ver 14.14 Distrib 5.1.69, for redhat-linux-gnu (x86_64) using readline 5.1</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;1-使用命令行模式进入mysql会看到最开始的提示符&quot;&gt;&lt;a href=&quot;#1-使用命令行模式进入mysql会看到最开始的提示符&quot; class=&quot;headerlink&quot; title=&quot;1. 使用命令行模式进入mysql会看到最开始的提示符&quot;&gt;&lt;/a&gt;1. 使用命令
      
    
    </summary>
    
      <category term="数据库" scheme="http://www.flycmd.com/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    
      <category term="mysql" scheme="http://www.flycmd.com/tags/mysql/"/>
    
  </entry>
  
  <entry>
    <title>Docker Compose：链接外部容器的几种方式</title>
    <link href="http://www.flycmd.com/2018/08/28/Docker-Compose%EF%BC%9A%E9%93%BE%E6%8E%A5%E5%A4%96%E9%83%A8%E5%AE%B9%E5%99%A8%E7%9A%84%E5%87%A0%E7%A7%8D%E6%96%B9%E5%BC%8F/"/>
    <id>http://www.flycmd.com/2018/08/28/Docker-Compose：链接外部容器的几种方式/</id>
    <published>2018-08-28T02:44:35.000Z</published>
    <updated>2018-08-28T02:45:13.385Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>来源：【夏末】 <a href="https://notes.wanghao.work/2017-06-12-Docker-Compose-链接外部容器的几种方式.html" target="_blank" rel="noopener">https://notes.wanghao.work/2017-06-12-Docker-Compose-链接外部容器的几种方式.html</a></p></blockquote><blockquote><p>在Docker中，容器之间的链接是一种很常见的操作：它提供了访问其中的某个容器的网络服务而不需要将所需的端口暴露给Docker Host主机的功能。Docker Compose中对该特性的支持同样是很方便的。然而，如果需要链接的容器没有定义在同一个<code>docker-compose.yml</code>中的时候，这个时候就稍微麻烦复杂了点。</p></blockquote><p>在不使用Docker Compose的时候，将两个容器链接起来使用—link参数，相对来说比较简单，以nginx镜像为例子：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">docker run --rm --name test1 -d nginx  <span class="comment">#开启一个实例test1</span></span><br><span class="line">docker run --rm --name test2 --link test1 -d nginx <span class="comment">#开启一个实例test2并与test1建立链接</span></span><br></pre></td></tr></table></figure><p>这样，<code>test2</code>与<code>test1</code>便建立了链接，就可以在<code>test2</code>中使用访问<code>test1</code>中的服务了。</p><p>如果使用Docker Compose，那么这个事情就更简单了，还是以上面的<code>nginx</code>镜像为例子，编辑<code>docker-compose.yml</code>文件为：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">"3"</span></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line"><span class="attr">  test2:</span></span><br><span class="line"><span class="attr">    image:</span> <span class="string">nginx</span></span><br><span class="line"><span class="attr">    depends_on:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">test1</span></span><br><span class="line"><span class="attr">    links:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">test1</span></span><br><span class="line"><span class="attr">  test1:</span></span><br><span class="line"><span class="attr">    image:</span> <span class="string">nginx</span></span><br></pre></td></tr></table></figure><p>最终效果与使用普通的Docker命令<code>docker run xxxx</code>建立的链接并无区别。这只是一种最为理想的情况。</p><hr><ol><li>如果容器没有定义在同一个<code>docker-compose.yml</code>文件中，应该如何链接它们呢？</li><li>又如果定义在<code>docker-compose.yml</code>文件中的容器需要与<code>docker run xxx</code>启动的容器链接，需要如何处理？</li></ol><p>针对这两种典型的情况，下面给出我个人测试可行的办法：</p><hr><h2 id="方式一：让需要链接的容器同属一个外部网络"><a href="#方式一：让需要链接的容器同属一个外部网络" class="headerlink" title="方式一：让需要链接的容器同属一个外部网络"></a>方式一：让需要链接的容器同属一个外部网络</h2><p>我们还是使用nginx镜像来模拟这样的一个情景：假设我们需要将两个使用Docker Compose管理的nignx容器（<code>test1</code>和<code>test2</code>）链接起来，使得<code>test2</code>能够访问<code>test1</code>中提供的服务，这里我们以能ping通为准。</p><p>首先，我们定义容器<code>test1</code>的<code>docker-compose.yml</code>文件内容为：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">"3"</span></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line"><span class="attr">  test2:</span></span><br><span class="line"><span class="attr">    image:</span> <span class="string">nginx</span></span><br><span class="line"><span class="attr">    container_name:</span> <span class="string">test1</span></span><br><span class="line"><span class="attr">    networks:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">default</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">app_net</span></span><br><span class="line"><span class="attr">networks:</span></span><br><span class="line"><span class="attr">  app_net:</span></span><br><span class="line"><span class="attr">    external:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><p><code>test2</code>的<code>docker-compose.yml</code>和<code>test1</code>的定义完全一致</p><p>正如你看到的那样，这里两个容器的定义里都使用了同一个外部网络<code>app_net</code>,因此，我们需要在启动这两个容器之前通过以下命令再创建外部网络：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker network create app_net</span><br></pre></td></tr></table></figure><p>之后，通过<code>docker-compose up -d</code>命令启动这两个容器，然后执行<code>docker exec -it test2 ping test1</code>,你将会看到如下的输出：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">docker <span class="built_in">exec</span> -it test2 ping test1</span><br><span class="line">PING test1 (172.18.0.2): 56 data bytes</span><br><span class="line">64 bytes from 172.18.0.2: icmp_seq=0 ttl=64 time=0.091 ms</span><br><span class="line">64 bytes from 172.18.0.2: icmp_seq=1 ttl=64 time=0.146 ms</span><br><span class="line">64 bytes from 172.18.0.2: icmp_seq=2 ttl=64 time=0.150 ms</span><br><span class="line">64 bytes from 172.18.0.2: icmp_seq=3 ttl=64 time=0.145 ms</span><br><span class="line">64 bytes from 172.18.0.2: icmp_seq=4 ttl=64 time=0.126 ms</span><br><span class="line">64 bytes from 172.18.0.2: icmp_seq=5 ttl=64 time=0.147 ms</span><br></pre></td></tr></table></figure><p>证明这两个容器是成功链接了，反过来在<code>test1</code>中ping<code>test2</code>也是能够正常ping通的。</p><p>如果我们通过<code>docker run --rm --name test3 -d nginx</code>这种方式来先启动了一个容器(<code>test3</code>)并且没有指定它所属的外部网络，而需要将其与<code>test1</code>或者<code>test2</code>链接的话，这个时候手动链接外部网络即可：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker network connect app_net test3</span><br></pre></td></tr></table></figure><p>这样，三个容器都可以相互访问了。</p><h2 id="方式二：更改需要链接的容器的网络模式"><a href="#方式二：更改需要链接的容器的网络模式" class="headerlink" title="方式二：更改需要链接的容器的网络模式"></a>方式二：更改需要链接的容器的网络模式</h2><p>通过更改你想要相互链接的容器的网络模式为<code>bridge</code>,并指定需要链接的外部容器（<code>external_links</code>)即可。与同属外部网络的容器可以相互访问的链接方式一不同，这种方式的访问是单向的。</p><p>还是以nginx容器镜像为例子，如果容器实例<code>nginx1</code>需要访问容器实例<code>nginx2</code>，那么<code>nginx2</code>的<code>docker-compose.yml</code>定义为：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">"3"</span></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line"><span class="attr">  nginx2:</span></span><br><span class="line"><span class="attr">    image:</span> <span class="string">nginx</span></span><br><span class="line"><span class="attr">    container_name:</span> <span class="string">nginx2</span></span><br><span class="line"><span class="attr">    network_mode:</span> <span class="string">bridge</span></span><br></pre></td></tr></table></figure><p>与其对应的，<code>nginx1</code>的<code>docker-compose.yml</code>定义为：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">"3"</span></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line"><span class="attr">  nginx1:</span></span><br><span class="line"><span class="attr">    image:</span> <span class="string">nginx</span></span><br><span class="line"><span class="attr">    external_links:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">nginx2</span></span><br><span class="line"><span class="attr">    container_name:</span> <span class="string">nginx1</span></span><br><span class="line"><span class="attr">    network_mode:</span> <span class="string">bridge</span></span><br></pre></td></tr></table></figure><blockquote><p>需要特别说明的是，这里的<code>external_links</code>是不能省略的，而且<code>nginx1</code>的启动必须要在<code>nginx2</code>之后，否则可能会报找不到容器<code>nginx2</code>的错误。</p></blockquote><p>接着我们使用ping来测试下连通性：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">$ docker <span class="built_in">exec</span> -it nginx1 ping nginx2  <span class="comment"># nginx1 to nginx2</span></span><br><span class="line">PING nginx2 (172.17.0.4): 56 data bytes</span><br><span class="line">64 bytes from 172.17.0.4: icmp_seq=0 ttl=64 time=0.141 ms</span><br><span class="line">64 bytes from 172.17.0.4: icmp_seq=1 ttl=64 time=0.139 ms</span><br><span class="line">64 bytes from 172.17.0.4: icmp_seq=2 ttl=64 time=0.145 ms</span><br><span class="line"></span><br><span class="line">$ docker <span class="built_in">exec</span> -it nginx2 ping nginx1 <span class="comment">#nginx2 to nginx1</span></span><br><span class="line">ping: unknown host</span><br></pre></td></tr></table></figure><p>以上也能充分证明这种方式是属于单向联通的。</p><p>在实际应用中根据自己的需要灵活的选择这两种链接方式，如果想偷懒的话，大可选择第二种。不过我更推荐第一种，不难看出无论是联通性还是灵活性，较为更改网络模式的第二种都更为友好。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;来源：【夏末】 &lt;a href=&quot;https://notes.wanghao.work/2017-06-12-Docker-Compose-链接外部容器的几种方式.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https
      
    
    </summary>
    
      <category term="工具" scheme="http://www.flycmd.com/categories/%E5%B7%A5%E5%85%B7/"/>
    
    
      <category term="docker" scheme="http://www.flycmd.com/tags/docker/"/>
    
  </entry>
  
</feed>
